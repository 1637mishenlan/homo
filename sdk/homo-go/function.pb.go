// Code generated by protoc-gen-go. DO NOT EDIT.
// source: function.proto

package homo

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// FunctionMessage function message
type FunctionMessage struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	QOS                  uint32   `protobuf:"varint,2,opt,name=QOS,proto3" json:"QOS,omitempty"`
	Topic                string   `protobuf:"bytes,3,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Payload              []byte   `protobuf:"bytes,4,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Timestamp            int64    `protobuf:"zigzag64,10,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	FunctionName         string   `protobuf:"bytes,11,opt,name=FunctionName,proto3" json:"FunctionName,omitempty"`
	FunctionInvokeID     string   `protobuf:"bytes,12,opt,name=FunctionInvokeID,proto3" json:"FunctionInvokeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FunctionMessage) Reset()         { *m = FunctionMessage{} }
func (m *FunctionMessage) String() string { return proto.CompactTextString(m) }
func (*FunctionMessage) ProtoMessage()    {}
func (*FunctionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ac74addf543d91a, []int{0}
}

func (m *FunctionMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionMessage.Unmarshal(m, b)
}
func (m *FunctionMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionMessage.Marshal(b, m, deterministic)
}
func (m *FunctionMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionMessage.Merge(m, src)
}
func (m *FunctionMessage) XXX_Size() int {
	return xxx_messageInfo_FunctionMessage.Size(m)
}
func (m *FunctionMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionMessage.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionMessage proto.InternalMessageInfo

func (m *FunctionMessage) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *FunctionMessage) GetQOS() uint32 {
	if m != nil {
		return m.QOS
	}
	return 0
}

func (m *FunctionMessage) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *FunctionMessage) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FunctionMessage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *FunctionMessage) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *FunctionMessage) GetFunctionInvokeID() string {
	if m != nil {
		return m.FunctionInvokeID
	}
	return ""
}

func init() {
	proto.RegisterType((*FunctionMessage)(nil), "homo.FunctionMessage")
}

func init() { proto.RegisterFile("function.proto", fileDescriptor_8ac74addf543d91a) }

var fileDescriptor_8ac74addf543d91a = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2b, 0xcd, 0x4b,
	0x2e, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0xc8, 0xcf, 0xcd,
	0x97, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f,
	0xcf, 0xd7, 0x07, 0x4b, 0x26, 0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e, 0x98, 0x05, 0xd1, 0xa4, 0x74,
	0x91, 0x91, 0x8b, 0xdf, 0x0d, 0x6a, 0x8e, 0x6f, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0xaa, 0x10, 0x1f,
	0x17, 0x93, 0xa7, 0x8b, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x4b, 0x10, 0x93, 0xa7, 0x8b, 0x90, 0x00,
	0x17, 0x73, 0xa0, 0x7f, 0xb0, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6f, 0x10, 0x88, 0x29, 0x24, 0xc2,
	0xc5, 0x1a, 0x92, 0x5f, 0x90, 0x99, 0x2c, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe1, 0x08,
	0x49, 0x70, 0xb1, 0x07, 0x24, 0x56, 0xe6, 0xe4, 0x27, 0xa6, 0x48, 0xb0, 0x28, 0x30, 0x6a, 0xf0,
	0x04, 0xc1, 0xb8, 0x42, 0x32, 0x5c, 0x9c, 0x21, 0x99, 0xb9, 0xa9, 0xc5, 0x25, 0x89, 0xb9, 0x05,
	0x12, 0x5c, 0x0a, 0x8c, 0x1a, 0x42, 0x41, 0x08, 0x01, 0x21, 0x25, 0x2e, 0x1e, 0x98, 0x13, 0xfc,
	0x12, 0x73, 0x53, 0x25, 0xb8, 0xc1, 0x86, 0xa2, 0x88, 0x09, 0x69, 0x71, 0x09, 0xc0, 0xf8, 0x9e,
	0x79, 0x65, 0xf9, 0xd9, 0xa9, 0x9e, 0x2e, 0x12, 0x3c, 0x60, 0x75, 0x18, 0xe2, 0x46, 0x4e, 0x5c,
	0x1c, 0x30, 0x31, 0x21, 0x33, 0x2e, 0x16, 0xe7, 0xc4, 0x9c, 0x1c, 0x21, 0x51, 0x3d, 0x50, 0xe8,
	0xe8, 0xa1, 0x79, 0x55, 0x0a, 0xbb, 0xb0, 0x12, 0x83, 0x93, 0xc2, 0x89, 0x87, 0x72, 0x0c, 0x3f,
	0x1e, 0xca, 0x31, 0xae, 0x78, 0x24, 0xc7, 0xb8, 0xe3, 0x91, 0x1c, 0xe3, 0x81, 0x47, 0x72, 0x8c,
	0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0x63, 0x12, 0x1b, 0x38,
	0x00, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x07, 0x0d, 0x44, 0x87, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FunctionClient is the client API for Function service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FunctionClient interface {
	Call(ctx context.Context, in *FunctionMessage, opts ...grpc.CallOption) (*FunctionMessage, error)
}

type functionClient struct {
	cc *grpc.ClientConn
}

func NewFunctionClient(cc *grpc.ClientConn) FunctionClient {
	return &functionClient{cc}
}

func (c *functionClient) Call(ctx context.Context, in *FunctionMessage, opts ...grpc.CallOption) (*FunctionMessage, error) {
	out := new(FunctionMessage)
	err := c.cc.Invoke(ctx, "/homo.Function/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FunctionServer is the server API for Function service.
type FunctionServer interface {
	Call(context.Context, *FunctionMessage) (*FunctionMessage, error)
}

func RegisterFunctionServer(s *grpc.Server, srv FunctionServer) {
	s.RegisterService(&_Function_serviceDesc, srv)
}

func _Function_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FunctionMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FunctionServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/homo.Function/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FunctionServer).Call(ctx, req.(*FunctionMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Function_serviceDesc = grpc.ServiceDesc{
	ServiceName: "homo.Function",
	HandlerType: (*FunctionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _Function_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "function.proto",
}
